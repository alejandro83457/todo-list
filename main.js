(()=>{"use strict";class t{#t=[];addTodo(t){this.#t.push(t)}get inbox(){return this.#t}removeTodo(t){let e;for(let o=0;o<this.#t.length;o++)this.#t[o].title==t&&(e=o);this.#t.splice(e,1)}stringify(){let t=[];for(let e of this.#t)t.push(e.getTodo());return JSON.stringify(t)}showInbox(){for(let t of this.#t)t.showTodo()}}class e{#e;#o;#i;#r;constructor(t,e,o,i){this.#e=t,this.#o=e,this.#i=o,this.#r=i}get title(){return this.#e}get description(){return this.#o}get due(){return this.#i}get priority(){return this.#r}getTodo(){return{title:this.#e,description:this.#o,due:this.#i,priority:this.#r}}showTodo(){console.log(`\t${this.#e} ${this.#o} ${this.#i} ${this.#r}`)}}class o{#e;#o;constructor(t,e){this.#e=t,this.#o=e}get title(){return this.#e}get description(){return this.#o}getTodo(){return{title:this.#e,description:this.#o}}showTodo(){console.log(`${this.#e} ${this.#o}`)}}class i{#n=[];get projects(){return this.#n}addProject(t){this.#n.push(t)}removeProject(t){let e;for(let o=0;o<this.#n.length;o++)this.#n[o].title==t&&(e=o);this.#n.splice(e,1)}stringify(){let t=[];for(let e of this.#n)t.push(e.stringify());return JSON.stringify(t)}showProjects(){for(let t of this.#n)t.showProject()}}class r{#l={};constructor(t){this.#l.title=t,this.#l.todos=[]}get projectTitle(){return this.#l.title}get project(){return this.#l}stringify(){let t={};t.title=this.#l.title,t.todos=[];for(let e of this.#l.todos)t.todos.push(e.getTodo());return t}addTodo(t){this.#l.todos.push(t)}showProject(){console.log(this.#l.title);for(let t of this.#l.todos)t.showTodo()}}function n(t){localStorage.inbox=t.stringify()}function l(t){localStorage.projects=t.stringify()}function d(){let t=document.querySelector("#list");for(;t.childNodes.length>0;)t.removeChild(t.firstChild);document.querySelector("#inbox-form")?document.querySelector("#inbox-form").remove():document.querySelector("#project-form")&&document.querySelector("#project-form").remove()}function c(){let t=document.querySelector("#projects-list");for(;t.childNodes.length>0;)t.removeChild(t.firstChild)}function u(t){let e=document.querySelector("#list"),o=t.project.todos;for(let t of o){let o=document.createElement("li");o.setAttribute("data",t.title);let i=document.createElement("div");i.textContent=`${t.title} ${t.description} ${t.due} ${t.priority}`,o.appendChild(i),e.appendChild(o)}}function s(t,e){for(let o of t.projects){let i=document.createElement("li");i.addEventListener("click",(()=>{document.querySelector("#inbox-form")&&document.querySelector("#inbox-form").remove(),d(),u(o),a(o,t)}));let r=document.createElement("div");r.textContent=`${o.projectTitle}`,i.appendChild(r),e.appendChild(i)}}function p(t){let e=document.createElement("input");return e.setAttribute("type","checkbox"),e.addEventListener("change",(e=>{t.removeTodo(e.target.parentElement.getAttribute("data")),function(t){t.target.parentElement.remove()}(e),n(t)})),e}function a(t,o){let i=document.querySelector("#list"),r=document.createElement("div");r.setAttribute("id","project-form");let n=document.createElement("input");n.setAttribute("type","text"),n.setAttribute("id","title"),n.setAttribute("placeholder","Title");let d=document.createElement("input");d.setAttribute("type","text"),d.setAttribute("id","description"),d.setAttribute("placeholder","Description");let c=new Date,u=`${c.getFullYear()}-${(c.getMonth()+1).toString().padStart(2,"0")}-${c.getDate().toString().padStart(2,"0")}`,s=document.createElement("input");s.setAttribute("id","due"),s.setAttribute("type","date"),s.setAttribute("value",u);let p=document.createElement("select");p.setAttribute("id","priority");let a=["low","medium","high"];for(let t of a){let e=document.createElement("option");e.setAttribute("value",t),e.textContent=t,p.appendChild(e)}let h=document.createElement("button");h.setAttribute("type","button"),h.setAttribute("id","add-todo-button"),h.textContent="Add",h.addEventListener("click",(()=>{!function(t,o,i){let r=document.querySelector("#title"),n=document.querySelector("#description"),d=document.querySelector("#due"),c=document.querySelector("#priority"),u=document.createElement("li");u.setAttribute("data",r.value);let s=document.createElement("div");s.textContent=`${r.value} ${n.value} ${d.value} ${c.value}`,u.appendChild(s),i.appendChild(u);let p=new e(r.value,n.value,d.value,c.value);t.addTodo(p),l(o)}(t,o,i),document.querySelector("#title").value="",document.querySelector("#description").value="",document.querySelector("#due").value=u})),r.appendChild(n),r.appendChild(d),r.appendChild(s),r.appendChild(p),r.appendChild(h),i.parentNode.appendChild(r)}let h,m;document.querySelector("#inbox").addEventListener("click",(()=>{let t=document.querySelector("#list");d(),function(t,e){for(let o of t.inbox){let i=document.createElement("li");i.setAttribute("data",o.title);let r=document.createElement("div");r.textContent=`${o.title} ${o.description}`;let n=p(t);i.appendChild(n),i.appendChild(r),e.appendChild(i)}}(h,t),function(t,e){let i=document.createElement("div");i.setAttribute("id","inbox-form");let r=document.createElement("input");r.setAttribute("type","text"),r.setAttribute("id","title"),r.setAttribute("placeholder","Title");let l=document.createElement("input");l.setAttribute("type","text"),l.setAttribute("id","description"),l.setAttribute("placeholder","Description");let d=document.createElement("button");d.setAttribute("type","button"),d.setAttribute("id","add-todo-button"),d.textContent="Add",d.addEventListener("click",(()=>{!function(t,e){let i=document.querySelector("#title"),r=document.querySelector("#description"),l=document.createElement("li");l.setAttribute("data",i.value);let d=document.createElement("div");d.textContent=`${i.value} ${r.value}`;let c=p(t);l.appendChild(c),l.appendChild(d),e.appendChild(l);let u=new o(i.value,r.value);t.addTodo(u),n(t)}(t,e),document.querySelector("#title").value="",document.querySelector("#description").value=""})),i.appendChild(r),i.appendChild(l),i.appendChild(d),e.parentNode.appendChild(i)}(h,t)})),document.querySelector("#projects").addEventListener("click",(()=>{let t=document.querySelector("#projects-list");t.childNodes.length>0?c():(c(),s(m,t)),m.showProjects()})),document.querySelector("#add-project").addEventListener("click",(()=>{let t=document.querySelector("#projects-list");c(),s(m,t),function(t,e){let o=document.createElement("div"),i=document.createElement("input"),n=document.createElement("div");o.setAttribute("id","project-name-container"),i.setAttribute("type","text"),i.setAttribute("id","project-name"),i.setAttribute("placeholder","Project name"),n.setAttribute("id","add-project-button"),n.textContent="Add",n.addEventListener("click",(()=>{t.addProject(new r(i.value)),c(),s(t,e),l(t)})),o.appendChild(i),o.appendChild(n),e.appendChild(o)}(m,t)})),localStorage.removeItem("inbox"),localStorage.removeItem("projects"),function(){if(0==localStorage.length){console.log("Empty. Loading content...");let t=[],e=[];localStorage.setItem("inbox",JSON.stringify(t)),localStorage.setItem("projects",JSON.stringify(e))}else console.log("Content found.")}(),h=function(){let e=localStorage.getItem("inbox");e=JSON.parse(e);let i=new t;for(let t of e){let e=t.title,r=t.description,n=new o(e,r);i.addTodo(n)}return i}(),m=function(){let t=localStorage.getItem("projects");t=JSON.parse(t);let o=new i;if(0==t.length)return o;for(let i of t){let t=i.title,n=i.todos,l=new r(t);for(let t of n){let o=t.title,i=t.description,r=t.due,n=t.priority,d=new e(o,i,r,n);l.addTodo(d)}o.addProject(l)}return o}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,